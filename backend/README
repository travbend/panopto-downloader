
[TO BUILD + RUN]
Create a directory backend/env_config
Add postgres_password.txt, rabbitmq_password.txt, and redis_password.txt files to this directory
Add acme.json file (for traefik) to this directory: 
    create a blank acme.json file on host machine and set the ACME_FILE_PATH env var
    run "chmod 600 acme.json" to set permissions (if on windows, run this in the docker terminal in the traefik container)
docker compose --env-file "env_config\.env" -f compose.yaml -f compose.dev.yaml -p panopto-downloader build
docker compose -p panopto-downloader up
NOTE: Traefik depends on the project name being panopto-downloader for networks to work (based on environment variable)

[DATABASE MIGRATIONS]
Install python requirements locally (e.g., alembic, sqlalchemy)
Add .../backend/src/ to PYTHONPATH env var on dev machine
Add SQLALCHEMY_CONNECTION_STRING env var on dev machine (change hostname to localhost or hostname)
Close and reopen vscode after editing system environment variables
Make sure the database container is running
cd to backend/src/common/data/sqlalchemy (i.e., location of alembic.ini)
Run "alembic revision -m "commit message" --autogenerate" replacing with the proper commit message
Edit autogenerated migration script in alembic/versions as needed
Remove sqlalchemy environment variable from dev machine so that it does not overwrite the .env file (TODO: fix?)

[TODO]
 - Add better logging / metrics to API. Notifications?
 - Deployment (dev vs production)
 - Freeze PIP requirements
 - Why not cleaning up files?
 - Remove ports from prod config
 - Section on how to debug